# location ~ \.php$ {
#			fastcgi_split_path_info ^(.+\.php)(/.+)$;
#			if (!-f $document_root$fastcgi_script_name) {
#				return 404;
#			}

location ~ [^/]\.php(/|$) {
	fastcgi_split_path_info ^(.+?\.php)(/.*)$;
	if (!-f $document_root$fastcgi_script_name) {
		return 404;
	}
	set $cors "false";
	if ($http_origin ~* (https?://.*\.*\.com(:[0-9]+)?)$) {
        set $cors "true";
    }

    if ($request_method = 'OPTIONS') {
        set $cors "${cors}options";
    }

    if ($request_method = 'GET') {
        set $cors "${cors}get";
    }
    if ($request_method = 'POST') {
        set $cors "${cors}post";
    }

if ($cors = "trueget") {

        add_header 'Access-Control-Allow-Origin' "$http_origin";

        add_header 'Access-Control-Allow-Credentials' 'true';
        #add_header 'Access-Control-Expose-Headers' 'Pagination';
    }

    if ($cors = "truepost") {

        add_header 'Access-Control-Allow-Origin' "$http_origin";

        add_header 'Access-Control-Allow-Credentials' 'true';

        # add_header 'Access-Control-Expose-Headers' 'Pagination';
    }

    if ($cors = "trueoptions") {

        add_header 'Access-Control-Allow-Origin' "$http_origin";

        add_header 'Access-Control-Allow-Credentials' 'true';


        add_header 'Access-Control-Max-Age' 1728000;

        add_header 'Access-Control-Allow-Methods' 'GET, POST, PATCH, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since,Pagination';

       add_header 'Content-Length' 0;

        add_header 'Content-Type' 'text/plain charset=UTF-8';
        # indicate successful return with no content
        return 204;
  }
                	fastcgi_pass  php;
            		fastcgi_index index.php;
            		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            		include fastcgi_params;
            		 #fastcgi_param TENANT $user;
			fastcgi_connect_timeout 60s;
			fastcgi_send_timeout 600s;
			fastcgi_read_timeout 600s;
			fastcgi_buffers 8 256k;
			fastcgi_buffer_size 128k;
			fastcgi_busy_buffers_size 256k;
			fastcgi_param HTTPS on;
            		break;



   		}


		location ~ \.(js|css|png|jpg|gif|swf|ico|pdf|mov|fla|zip|rar)$ {
                try_files $uri =404;
        	}

		# Directives to send expires headers and turn off 404 error logging.
location ~* ^.+\.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|rss|atom|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
       access_log off; log_not_found off; expires max;
}


